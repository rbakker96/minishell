#ECHO
echo test ; echo $?
echo echo ; echo $?
echo ; echo $?
[NO] echo -n -n lala ; echo $?
add_newline ; echo $?
echo \n ; echo $?
echo lala\nlala ; echo $?
[NO] echo "lala\nlala" ; echo $?
echo 'lala\nlala' ; echo $?
[NO] echo "test""test" "lala" ; echo $?
[NO] echo "test"test"" "lala" ; echo $?
[NO] echo "test"\""test" "lala" ; echo $?
[NO] echo "test"\"\""\"test" "lala" ; echo $?
echo 'test''test''lala' ; echo $?
echo 'test'\\'test'\''lala' ; echo $?
echo test "" test "" test ; echo $?
echo test """" test """" test ; echo $?
echo test "" "" "" test ; echo $?
echo "" test "" test "" test "" ; echo $?
echo -n oui ; echo $?
echo $PWD ; echo $?
[NO] echo $OLDPWD ; echo $?
echo \$PWD ; echo $?
echo \\$PWD ; echo $?
echo $NOVAR ; echo $?
[NO] pwd ; echo $PWD ; echo OLDPWD ; unset PWD ; echo $PWD ; echo $OLDPWD ; cd .. ; echo $OLDPWD ; pwd ; echo $OLDPWD ; cd .. ; pwd ; echo $OLDPWD  ; echo $?
[NO] echo ${PWD} ; echo $?
echo ${PATH ; echo $?
[NO] echo $PWD} ; echo $?

#ENV
env' 'grep -v _=' 'sort
env lala' 'grep -v env:
export SHLVL=8 ; env' 'grep -a SHLVL
export SHLVL=test ; env' 'grep -a SHLVL
export SHLVL=0 ; env' 'grep -a SHLVL
export SHLVL=+23 ; env' 'grep -a SHLVL
export SHLVL=-10 ; env' 'grep -a SHLVL
export SHLVL=8+8 ; env' 'grep -a SHLVL
export SHLVL=++9 ; env' 'grep -a SHLVL
export SHLVL=-8+8 ; env' 'grep -a SHLVL
export SHLVL=9-8 ; env' 'grep -a SHLVL
export testvar ; env | grep -a testvar ; echo $?
#export variable do not overwrite previous variable
[NO] export testvar= ; env | grep -a testvar ; echo $?
[NO] export testvar=0 ; env | grep -a testvar ; echo $?
[NO] export testvar=1234567 ; env | grep -a testvar ; echo $?
[NO] export testvar=lala ; env | grep -a testvar ; echo $?
[NO] export testvar=lala%lala ; env | grep -a testvar ; echo $?
[NO] export testvar=@lala ; env | grep -a testvar ; echo $?
export testvar10 ; env | grep -a testvar10 ; echo $?
[NO] export testvar10= ; env | grep -a testvar10 ; echo $?
[NO] export testvar10=10 ; env | grep -a testvar10 ; echo $?
export _testvar ; env | grep -a _testvar ; echo $?
[NO] export _testvar= ; env | grep -a _testvar ; echo $?
[NO] export _testvar=10 ; env | grep -a _testvar ; echo $?
[NO] export _testvar=lala ; env | grep -a _testvar ; echo $?
[NO] export _testvar=lala10 ; env | grep -a _testvar ; echo $?
export _testvar10 ; env | grep -a _testvar10 ; echo $?
[NO] export _testvar10= ; env | grep -a _testvar10 ; echo $?
[NO] export _testvar10=lala ; env | grep -a _testvar10 ; echo $?
[NO] export _testvar10=10; env | grep -a _testvar10 ; echo $?
[NO] export _testvar10=lala10 ; env | grep -a _testvar10 ; echo $?
[NO] export testvar=10 ; export testvar=20 ; env | grep -a testvar ; echo $?

#EXPORT
[NO] export % ; echo $?
[NO] export ! ; echo $?
[NO] export + ; echo $?
[NO] export testvar ; export | grep -a testvar ; echo $?
[NO] export testvar= ; export | grep -a testvar ; echo $?
[NO] export testvar=0 ; export | grep -a testvar ; echo $?
[NO] export testvar=1234567 ; export | grep -a testvar ; echo $?
[NO] export testvar=lala ; export | grep -a testvar ; echo $?
[NO] export testvar=lala%lala ; export | grep -a testvar ; echo $?
[NO] export testvar=@lala ; export | grep -a testvar ; echo $?
[NO] export testvar10 ; export | grep -a testvar10 ; echo $?
[NO] export testvar10= ; export | grep -a testvar10 ; echo $?
[NO] export testvar10=10 ; export | grep -a testvar10 ; echo $?
[NO] export _testvar ; export | grep -a _testvar ; echo $?
[NO] export _testvar= ; export | grep -a _testvar ; echo $?
[NO] export _testvar=10 ; export | grep -a _testvar ; echo $?
[NO] export _testvar=lala ; export | grep -a _testvar ; echo $?
[NO] export _testvar=lala10 ; export | grep -a _testvar ; echo $?
[NO] export _testvar10 ; export | grep -a _testvar10 ; echo $?
[NO] export _testvar10= ; export | grep -a _testvar10 ; echo $?
[NO] export _testvar10=lala ; export | grep -a _testvar10 ; echo $?
[NO] export _testvar10=10; export | grep -a _testvar10 ; echo $?
[NO] export _testvar10=lala10 ; export | grep -a _testvar10 ; echo $?
[NO] export testvar=10 ; export testvar=20 ; export | grep -a testvar ; echo $?
[NO] export testvar=lala ; export ; export testvar=10 ; export' 'grep -v _=' 'sort ; echo $?

#UNSET [NO]
unset ; echo $?
unset novar ; echo $?
[NO] unset % ; echo $?
export a ; export ; unset a ; export' 'grep -v _= ; echo $?
export a= ; export ; unset a ; export' 'grep -v _= ; echo $?
export a=10 ; export ; unset a ; export' 'grep -v _= ; echo $?
export a=lala ; export ; unset a ; export' 'grep -v _= ; echo $?
export a=?lala%lala; export ; unset a ; export' 'grep -v _= ; echo $?
export a=a10a10 ; export ; unset a ; export' 'grep -v _= ; echo $?
export a10 ; export ; unset a10 ; export' 'grep -v _= ; echo $?
export a10= ; export ; unset a10 ; export' 'grep -v _= ; echo $?
export a10=10 ; export ; unset a10 ; export' 'grep -v _= ; echo $?
export a10=lala ; export ; unset a10 ; export' 'grep -v _= ; echo $?
export a10=?lala%lala; export ; unset a10 ; export' 'grep -v _= ; echo $?
export a10=a10a10 ; export ; unset a10 ; export' 'grep -v _= ; echo $?
export _a10 ; export ; unset _a10 ; export' 'grep -v _= ; echo $?
export _a10= ; export ; unset _a10 ; export' 'grep -v _= ; echo $?
export _a10=10 ; export ; unset _a10 ; export' 'grep -v _= ; echo $?
export _a10=lala ; export ; unset _a10 ; export' 'grep -v _= ; echo $?
export _a10=?lala%lala; export ; unset _a10 ; export' 'grep -v _= ; echo $?
export _a10=a10a10 ; export ; unset _a10 ; export' 'grep -v _= ; echo $?


#PWD
pwd; echo $?
pwd test; echo $?
pwd test lala; echo $?
pwd "test"; echo $?
[NO] pwd ; cd .. ; pwd ; cd / ; pwd ; cd . ; pwd ; cd ~/ ; pwd; echo $?
pwd .; echo $?
pwd ..; echo $?

//STOP HERE
#CD
mkdir test_cd
mkdir ~/test_cd
pwd ; cd ; pwd
pwd ; cd .. ; pwd
export dir=${PWD%/*} ; pwd ; cd $dir ; pwd' ; unset dir
pwd ; cd test_cd ; pwd
pwd ; cd ~/ ; pwd
pwd ; cd ~/test_cd ; pwd
pwd ; cd .. ; pwd ; cd .. ; pwd ; cd ~/ ; pwd
pwd ; cd /
pwd ; cd error ; pwd
pwd ; cd error error ; pwd
pwd ; cd test_cd error ; pwd
pwd ; cd error test_cd error ; pwd
pwd ; cd ~/test_cd error ; pwd
pwd ; cd error ~/test_cd error ; pwd
pwd ; cd .. ; pwd ; cd .. ; pwd ; cd .. ; pwd ; cd .. ; pwd ; cd .. ; pwd ; cd .. ; pwd 
pwd ; cd .. | pwd
pwd | cd | pwd ; cd | pwd
pwd ; cd ../minishell_tester ; pwd
pwd ; cd ../error ; pwd
pwd ; cd . ; pwd
pwd ; cd ./ ; pwd
pwd ; cd ../ ; pwd
pwd ; cd ... ; pwd
pwd ; cd .error ; pwd
pwd ; cd ..error ; pwd
echo -e "\n$ORANGE >> THOSE TESTS MAY HAVE TO BE CHANGED BY A DIFFERENT PATH $RESET"
pwd ; cd ../../../Bureau/../Bureau/../Bureau ; pwd
pwd ; cd ./../../../Bureau/../Bureau/../Bureau ; pwd
pwd ; cd ./../../../Bureau/././././../Bureau/././././../Bureau ; pwd
pwd ; cd ~/../../home/../home/user42/Bureau/../Bureau/../Bureau ; pwd
pwd ; cd ~/.. ; pwd
pwd ; cd ../.. ; cd minishell/../minishell/.. ; pwd
pwd ; cd ../../ ; cd ./minishell/.././minishell/../. ; pwd
pwd ; cd ~ ; cd ../../../../../ ; pwd
pwd ; cd ../.../ ; pwd
pwd ; cd ../... ; pwd
mkdir ...
pwd ; cd ... ; pwd
pwd ; cd ../minishell_tester/... ; pwd
pwd ; cd .../../..././././../... ; pwd
rm -rf test_cd ~/test_cd ...


#EXIT
exit
exit | echo lala
exit ; echo lala
exit 0
exit 1
exit 255
exit 256
exit 1000
exit 9223372036854775807
exit +0
exit +1
exit +255
exit +256
exit +1000
exit +9223372036854775807
exit -0
exit -1
exit -255
exit -256
exit -1000
exit -9223372036854775808
exit --1
exit ++1
exit ++1
exit lala
exit ?
exit @@
exit 9223372036854775810
exit -9223372036854775810
export a ; exit $a
export a= ; exit $a
export a=77 ; exit $a
export % ; exit $?
exit $a
exit 55 55
exit +55 55
exit -55 55
exit lala lala
exit 55 lala
exit lala 55




#VARIABLES D'ENVIRONNEMENTS
export test=lala ; echo $test ; export $test=10 ; echo $lala
export test=lala ; export $test=a10 ; export $lala=test ; unset $lala ; export' 'grep -v _=
export a b c ; unset a c ; export' 'grep -v _=
export test=echo val=lala ; $test $lala ; export' 'grep -v _=
echo $TEST$TEST=lala
echo $TEST=lala$TEST
echo $TEST$TEST=lala$TEST
echo $TEST$TEST=$TEST=$TEST=$TEST=$TEST=$TEST
echo $1TEST
echo $10000TEST
echo $99TEST
echo $=TEST
echo $1 "" $9 "" $4 "" $7
echo $?TEST$?
echo "$PWD"
echo "$LALA"
echo \'$PWD\'
echo \'$LALA\'


#PIPE
export a | echo lala ; export' 'grep -v _=
export | echo lala
unset PWD | echo lala ; export' 'grep -v _=
cd .. | echo lala ; export' 'grep -v _=
echo test | echo lala
pwd | echo lala
env | echo lala
cat bible.txt | grep testifieth

echo -e "\n$ORANGE >> THIS TEST MAY TAKE A WHILE TO ACHIEVE $RESET"
find / | grep cores
echo test | cat | cat | cat | cat | cat | grep test


#PARSING
echo \n\n
echo "" 
echo \| 
echo \"\" 
echo \\
echo \\\\ 
echo \|\| 
echo \\\|\\\| 
echo \\"\\" 
echo \$ \" 
echo \[ \] \\ \` 
echo \: \@ \< \> \= \? 
echo \"a\" 
echo \\"a\\" 
echo "\\a\\" 
echo \\\"a\"\\ 
echo a\\a 
echo a\"\a 
echo $ 
echo \$
echo \\$ 
echo $USER 
echo \$USER 
echo \\$USER 
echo \\\$USER 
echo $war 
echo \$war 
echo \\$war 
echo \\\$war 
echo \|\\$USER 
echo \|\\\$USER 
echo \\\"$USER 
echo \|\\$USER 
echo \|\\\$USER 
echo \\\"$USER 
echo \$ \! \@ \# \% \^ \& \* \( \) \_ \+ \| 
echo \$ \! \@ \# \% \^ \& \* \( \) \_ \+ \| 
echo \"\$ \! \@ \# \% \^ \& \* \( \) \_ \+ \|\" 
echo \$ \! \@ \# \% \^ \& \* \( \) \_ \+ \| 
echo \$ \! \@ \# \% \^ \& \* \( \) \_ \+ \| 
echo \\\$ \\\! \\\@ \\\# \\\% \\\^ \\\& \\\* \\\( \\\) \\\_ \\\+ \\\| 
echo \: \! \< \> \= \? 
echo "\: \! \< \> \= \?" 
echo \[ \] \\ \` 
echo \\ \\ \\
echo \\ \\\ \\
echo \\ \ \\
echo \\ \ \\
echo \\ $ \\
echo \\ \$ \\
echo \\ \\$ \\
echo \\ | \\
echo \\ \| \\
echo \\ \\| \\
echo \\ ; \\
echo \\ \; \\
echo \\ \\; \\
echo \ \\ \\
echo \ \\\ \\
echo \ \ \\
echo \ \ \\
echo \ \$ \\
echo \ \\$ \\
echo \ \| \\
echo \ \\| \\
echo \ \; \\
echo \ \\; \\
echo "\\"\\
echo \"\\\"\\
echo "\\\|"\\
echo \"\\\|\"\\
echo \"\\$TEST\|\"$1\\$444
echo \"\\\$TEST\|\"\$1\\\$444
echo "*"\\-\% \\ \$
echo \"*"\\-\% \\ \$"
echo \'
echo \\'\"\'\"
echo \\'\"\'\"
echo \'\"\'\"
echo \'\"\'\"
echo \\'\"\\'\"
echo \\'\"\\\\'\"
echo \\'\"\\'\"
echo lala;echo test;echo lala
echo lala|echo test|echo lala
echo lala;echo test|echo lala
echo lala|echo test;echo lala
echo lala ;   echo   test     ;echo      lala
echo lala             |echo       test |                            echo  lala
echo lala ;   echo test| echo        lala
echo        lala|echo test ;echo                                   lala


#REDIRECTIONS
mkdir test_files
echo test > a ; cat < a
echo lala >a ; cat <a
echo test>a ; cat<a
echo lala> a ; cat< a
echo test >a ; cat <a
echo lala> a ; cat< a
echo test        >a ; cat<        a
echo lala            >     a ; cat        <       a
echo test > test_files/a ; cat < test_files/a
echo lala >test_files/a ; cat <test_files/a
echo test > b ; echo test add >> b ; cat < b
echo test > b ; rm b ; echo test add >> b ; cat < b
echo test > a ; echo test2 > b ; <a >b ; cat a b
echo test > a ; echo test2 > b ; >a >b <error; cat a b
echo test > a ; echo test2 > b ; rm a ; rm b ; >a >b <error; cat a b
echo test > a ; echo test2 > b ; >a <error b; cat a b
echo test > a ; echo test2 > b ; rm a ; rm b ; >a <error >b ; cat a b
cat <error
echo test > test_files/a ; echo test2 > test_files/b ; >test_files/a >test_files/b <error; cat test_files/a test_files/b
echo test > test_files/a ; echo test2 > test_files/b ; rm test_files/a ; rm test_files/b ; >test_files/a >test_files/b <error; cat test_files/a test_files/b
echo test > test_files/a ; echo test2 > test_files/b ; >test_files/a <error >test_files/b; cat test_files/a test_files/b
echo test > test_files/a ; echo test2 > test_files/b ; rm test_files/a ; rm test_files/b ; >test_files/a <error >test_files/b ; cat test_files/a test_files/b
cat <test_files/error
echo test > ../a ; echo test2 > ../b ; >../a >../b <error ; cat ../a ../b
echo test > ../a ; echo test2 > ../b ; rm ../a ; rm ../b ; >../a >../b <error; cat ../a ../b
echo test > ../a ; echo test2 > ../b ; >../a <error >../b ; cat ../a ../b
echo test > ../a ; echo test2 > ../b ; rm ../a ; rm ../b ; >../a <error >../b ; cat ../a ../b
cat <../error
<error
echo test > test_files/a ; echo test2 > test_files/b ; >test_files/a >>test_files/b <error; cat test_files/a test_files/b
echo test > test_files/a ; echo test2 > test_files/b ; >>test_files/a >test_files/b <error; cat test_files/a test_files/b
echo test > test_files/a ; echo test2 > test_files/b ; >>test_files/a >>test_files/b <error; cat test_files/a test_files/b
echo test > test_files/a ; echo test2 > test_files/b ; >test_files/a <error >>test_files/b ; cat test_files/a test_files/b
echo test > test_files/a ; echo test2 > test_files/b ; >test_files/a <error >>test_files/b ; cat test_files/a test_files/b
echo test > test_files/a ; echo test2 > test_files/b ; <error >>test_files/a >>test_files/b ; cat test_files/a test_files/b
delete_file "test_files/a test_files/b"
echo test > test_files/a ; echo lala > test_files/b ; >test_files/a >>test_files/b <error; cat test_files/a test_files/b
delete_file "test_files/a test_files/b"
echo test > test_files/a ; echo lala > test_files/b ; >>test_files/a >>test_files/b <error; cat test_files/a test_files/b
delete_file "test_files/a test_files/b"
>test_files/a <error >>test_files/b ; cat test_files/a test_files/b
delete_file "test_files/a test_files/b"
>test_files/a <error >>test_files/b ; cat test_files/a test_files/b
delete_file "test_files/a test_files/b"
<error >>test_files/a >>test_files/b ; cat test_files/a test_files/b
echo lala > a >> a >> a ; echo test >> a ; cat < a
echo lala > a >> a >> a ; echo test >> a ; echo lala > a >> a >> a ; cat < a
echo lala >> a >> a > a ; echo test >> a ; cat < a
echo lala >> a >> a > a ; echo test >> a ; echo lala >> a >> a > a ; cat < a
echo test > a ; echo lala >> a >> a >> a ; echo test >> a ; cat < a
echo test > a ; echo lala >> a >> a >> a ; echo test >> a ; echo lala >> a >> a >> a ; cat < a
echo test > a ; echo lala > b ; rm b ; >>a >>b <error; cat a b
echo test > a ; echo lala > b ; rm b ; >>a <error >> b ; cat a b
echo test > a ; echo lala > b ; rm a ; rm b ; >>a >>b <error; cat a b
echo test > a ; echo lala > b ; rm a ; rm b ; >>a <error >> b ; cat a b
echo <a <b
echo <b <a
echo lala > a ; rm a ; echo lala > b ; rm b ; echo lala > a > b > a ; cat a b
echo test > a ; echo test > b ; echo lala > a > b > a ; cat a b
echo lala > a ; rm a ; echo lala > b ; rm b ; echo lala > a >> b > a ; cat a b
echo test > a ; echo test > b ; echo lala > a >> b > a ; cat a b
echo lala > a ; rm a ; echo lala > b ; rm b ; echo lala > a > b >> a ; cat a b
echo test > a ; echo test > b ; echo lala > a > b >> a ; cat a b
echo lala > a ; rm a ; echo lala > b ; rm b ; echo lala >> a > b > a ; cat a b
echo test > a ; echo test > b ; echo lala >> a > b > a ; cat a b
echo lala > a ; rm a ; echo lala > b ; rm b ; echo lala >> a >> b >> a ; cat a b
echo test > a ; echo test > b ; echo lala >> a >> b >> a ; cat a b
echo lala > a ; rm a ; echo lala > b ; rm b ; echo lala > a > b > a ; cat a b
echo test > a ; echo test > b ; echo lala > a > b > a ; cat a b
echo lala > a ; rm a ; echo lala > b ; rm b ; echo lala > a >> b > a ; cat a b
echo test > a ; echo test > b ; echo lala > a >> b > a ; cat a b
echo lala > a ; rm a ; echo lala > b ; rm b ; echo lala > a > b >> a ; cat a b
echo test > a ; echo test > b ; echo lala > a > b >> a ; cat a b
echo lala > a ; rm a ; echo lala > b ; rm b ; echo lala >> a > b > a ; cat a b
echo test > a ; echo test > b ; echo lala >> a > b > a ; cat a b
echo lala > a ; rm a ; echo lala > b ; rm b ; echo lala >> a >> b >> a ; cat a b
echo test > a ; echo test > b ; echo lala >> a >> b >> a ; cat a b
rm -rf test_files


#$?
export a ; echo $?
export % ; echo $?
echo "test" > a ; cat a ; echo $?' ; rm a
cat a ; echo $?
pwd ; echo $?
export a | echo $?
echo lala ; echo $?
echo lala | echo $?
pwd ; echo $?
pwd | echo $?
cd / ; echo $?
 cd / | echo $?
cd ~/ ; echo $?
 cd ~/ | echo $?
cd /error ; echo $?
cd ~/error ; echo $?
export a ; unset a ; echo $?
export a | unset a | echo $?
unset a ; echo $?
unset a | echo $?
echo $? ; echo $? ; echo $?
echo $? | echo $? | echo $?
cd error ; echo $?
cd error error ; echo $?
./error ; echo $?
<error ; echo $?
cat <error ; echo $?
cat < ; echo $?
echo test > ; echo $?
echo test >> ; echo $?

#PROGRAM
./prog
./prog a
./prog a b
./prog a b c
$PWD/prog
$PWD/prog a
$PWD/prog b
mkdir test_prog
cd test_prog ; ../prog
cd test_prog ; ../prog a
cd test_prog ; ../prog a b
rm -rf test_prog


#OTHERS
touch test_file ; rm test_file
ls
cat bible.txt
/bin/ls
echo test > a ; /bin/cat a
echo test > a ; /bin/rm a
/bin/pwd
unset PATH ; ls ; cd /bin ; ls
export PATH=$PWD/add_path:$PATH ; export | grep PATH ; ls


echo -e "\n\n$ORANGE#############################################################################"
echo -e "#             NOT MANDATORY TO BE SIMILAR BUT MUST NOT SEGFAULT             #"
echo -e "#############################################################################$RESET\n"

echo $!
echo $@
echo $#
echo $%
echo $^
echo $&
echo $*
echo $(
echo $)
echo $()
echo $-
echo $+
echo ${
echo $}
echo ${}
echo $[
echo $]
echo $[]
echo \'\"\'
echo \'\"\'\"
echo \'\"\'\"|\"
echo \'\"\'\"|\"\'||\'
echo \'\"\'\"|\"\'\|\|\'
echo \'\"\'\"|\"\'\|\|\' \'\' \"\"
echo "\\\"\\
echo \\'\"\'
echo \'\\"\'\\"|\"\'\|\|\' \'\' \"\"


echo -e "\n\n$PURPLE#############################################################################"
echo -e "#                            RETURN VALUE TESTS                             #"
echo -e "#############################################################################$RESET\n"
let "test_number=1"

exit
exit | echo lala
exit ; echo lala
exit 0
exit 1
exit 255
exit 256
exit 1000
exit 9223372036854775807
exit +0
exit +1
exit +255
exit +256
exit +1000
exit +9223372036854775807
exit -0
exit -1
exit -255
exit -256
exit -1000
exit -9223372036854775808
exit --1
exit ++1
exit ++1
exit lala
exit ?
exit @@
exit 9223372036854775810
exit -9223372036854775810
export a ; exit $a
export a= ; exit $a
export a=77 ; exit $a
export % ; exit $?
exit $a
exit 55 55
exit +55 55
exit -55 55
exit lala lala
exit 55 lala
exit lala 55