----------------------------------ROY-------------------------------------------

[TO FIX]
export TEST= 100
--> save it as TEST= but should give an error message

[TO FIX]
export testvar ; export | grep -a testvar ; echo $?
--> if testvar exist, it should not unset the variable

[Check later]
export test_var= ; export | grep -a test_var ; echo $?
--> if no value after =, an empty string should be assigned as the value. 
Otherwise, it will give random values

export 1test
bash: export: `1test': not a valid identifier

[;;;]
echo ; echo \n ' \n this is the; "first line"' ; echo "and right here;;; 'We have the second'" ; echo and" a fe"'w 'here'; with some slash and quotes   .'   '\' ; echo '\\' ; echo "\\" ; echo    "\"" ; echo   \\ ; echo   \' ; echo   \" "\\"    "\""   \\   \'   \"

----------------------------------QING-------------------------------------------

[FIXED]
export does not print a, b, c

[FIXED] export ; export a="\\" ; export b='\\' ; export c="\b" ; export
To print one more \ when there's a \

//bash
declare -x a="\\"
declare -x b="\\\\"
declare -x c="\\b"

//env --> saved correctly
a=\
b=\\
c=\b

[ADDED]
cd $IETSONBESTAANDS ; cd $GEK .. ; cd $NOTHING $MORENOTHING ..
cd $NOTHING $MORENOTHING .. ..
cd ../Desktop
cd ~/test_cd
cd ~test_cd
cd ~/Desktop
echo | cd .. | pwd

[FIXED]
memory leaks in expand_token_list

-----------------------------------------------------------------------------

export $hiuohoi
work as export

-----------------------------------------------------------------------------

env $hiuohoi
work as env

-----------------------------------------------------------------------------
unset PATH ; ls
bash: ls: No such file or directory

-----------------------------------------------------------------------------

--> double check Peer's version
[NO] asdf ctrl-D --> handled
// when there's input, ctrl-D should not exit
[NO] asdf ctrl-\ --> not handled
// input is lost


----------------------------------DOUBLE CHECK-----------------------------------

// our version sometimes also give OLDPWD as an output. Not sure when OLDPWD is set
export | grep -e "PWD="
declare -x PWD="/Users/qli/Desktop/qli_working"

echo | cd .. | pwd

In our current version, it does not work when you enter the command multiple times

echo test >> test.txt

cat | cat -e

--> double check Peer's version
[NO] asdf ctrl-D --> handled
// when there's input, ctrl-D should not exit
[NO] asdf ctrl-\ --> not handled
// input is lost

----------------------------------IGNORE-----------------------------------
[COULD FIX IF IT'S SMALL]
echo \|\| ; echo $?
echo \\\|\\\| ; echo $?
echo \|\\$USER ; echo $?
echo \|\\\$USER ; echo $?
echo \\\$ \\\! \\\@ \\\# \\\% \\\^ \\\& \\\* \\\( \\\) \\\_ \\\+ \\\| ; echo $?
echo \ \| \\ ; echo $?
echo \"\\\|\"\\ ; echo $?

[DISCUSS - single $ to be printed]
[NO] echo "hallo$"
[NO] echo $/
[NO] echo $2$4 ; echo $ ; echo "123\"456" ; echo $1234 ; echo hoi$1234

----------------------------------TO ADD TO A WORKING VERSION------------------

[FIXED]
cd $IETSONBESTAANDS ; cd $GEK .. ; cd $NOTHING $MORENOTHING ..
cd $NOTHING $MORENOTHING .. ..
cd ../Desktop
cd ~/test_cd
cd ~test_cd

[FIXED - export]
- sort the output (strcmp)
- if a variable does not exist, still print it in output (save it to envp but only print ones with = when doing env)

------------------------------------FIXED-------------------------------------------

[FIXED] --> process_quotes(char *line, int *i) function
[FIXED] echo \\'\"\'\" ; echo $?
[FIXED] echo \\'\"\' ; echo $?
[FIXED] echo "test"\"\""\"test" "lala" ; echo $?
[FIXED] echo 'test'\\'test'\''lala' ; echo $?
[FIXED] echo "test""test" "lala" ; echo $?

[FIXED] --> execute_exit() function
export a ; exit $a
export a= ; exit $a
exit $a
--> if $a does not exit, it equals to exit (0)

[FIXED]
echo test """" test """" test ; echo $?
